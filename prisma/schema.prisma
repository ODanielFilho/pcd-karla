generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String?
  email        String   @unique
  passwordHash String?  @map("password_hash")
  avatarUrl    String?  @map("avatar_url")
  role         UserRole @default(CANDIDATE)
  tokens       Token[]
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  jobs         Job[]    @relation("CompanyJobs")
  applications Application[]

  @@map("users")
}

model Job {
  id          String       @id @default(uuid())
  title       String
  description String
  companyId   String
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  company     User         @relation("CompanyJobs", fields: [companyId], references: [id])
  applications Application[]

  @@map("jobs")
}

model Application {
  id        String   @id @default(uuid())
  userId    String
  jobId     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User     @relation(fields: [userId], references: [id])
  job       Job      @relation(fields: [jobId], references: [id])

  @@map("applications")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id        String    @id @default(uuid())
  type      TokenType
  createdAt DateTime  @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@map("tokens")
}

enum UserRole {
  ADMIN
  COMPANY
  CANDIDATE
}


